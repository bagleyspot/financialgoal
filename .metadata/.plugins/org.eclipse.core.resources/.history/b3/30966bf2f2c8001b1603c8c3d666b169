package come.project.financialgoalbe.repository;

import java.math.BigDecimal;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import come.project.financialgoalbe.entities.Bond;

@Repository
public interface BondRepository extends JpaRepository<Bond,Long>{
	
	public List<Bond> findAll();
	
	@Query( value ="select * from bond\r\n"
			+ "where id_country = (select c.id_country from country as c where c.short_name=?1)", nativeQuery=true)
	public List<Bond> findBondByCountry(String shortName);
	
	@Query( value = "select * from bond where isin = ?1", nativeQuery = true)
	public Bond findBondByIsin(String isin);

	@Query(value ="select * from bond\r\n"
			+ "where isin in (select isin from bond_deal where id_user=?1 AND id_folder = (select id_folder from folder where short_name=?2))", nativeQuery = true)
	public List<Bond> findAllByOwner(int id, String folder);

	@Query ( value = "select distinct isin,(select sum(price*quantity) from bond_deal where isin = bd.isin and type_of_deal = 'S')\r\n"
			+ "-(select sum(price*quantity) from bond_deal where isin = bd.isin and type_of_deal = 'B')\r\n"
			+ "from bond_deal as bd where movement_date BETWEEN ?1 AND ?2" , nativeQuery = true)
	public HashMap<String,BigDecimal> valueBondBuy(Calendar startDate, Calendar endDate);

}
